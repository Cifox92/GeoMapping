{"version":3,"sources":["service/AuthService.js","components/ui/Navbar/index.js","service/FilesService.js","components/forms/userForm.js","components/auth/Signup-form/index.js","components/auth/Login-form/index.js","service/RoutesService.js","components/ui/routeMap/map.js","components/ui/routeMap/index.js","components/pages/editUser/index.js","components/pages/profile/index.js","components/pages/homeLoggedIn/generalMap/map.js","components/pages/homeLoggedIn/generalMap/index.js","components/pages/homeLoggedIn/index.js","components/pages/homeNotLoggedIn/index.js","components/forms/routeForm.js","components/pages/createRoute/index.js","components/pages/myRoutes/index.js","components/forms/pointForm.js","components/pages/routeCreation/addPoint.js","components/forms/rockForm.js","components/pages/routeCreation/addRock.js","components/pages/routeCreation/index.js","components/ui/visualData/pieChart.js","components/pages/routeDetails/index.js","components/pages/editRoute/editRouteInfo.js","components/pages/editRoute/editPoint.js","components/pages/editRoute/editRock.js","components/pages/editRoute/index.js","components/App.js","index.js","components/img/logo.png"],"names":["AuthService","login","credentials","service","post","signup","logout","isLoggedIn","get","this","axios","create","baseURL","process","withCredentials","Navigation","props","then","setTheUser","handleToast","catch","err","console","log","Navbar","bg","variant","expand","sticky","Brand","to","className","src","GeoImg","alt","Toggle","aria-controls","Collapse","id","Nav","loggedInUser","Link","as","activeStyle","color","onClick","_id","Image","avatar","roundedCircle","Component","Services","handleUpload","theFile","UserForm","Container","Row","Col","md","offset","span","Form","onSubmit","Group","Label","Control","onChange","inputChange","value","username","name","type","password","Text","aboutMe","fileUpload","Button","SignupForm","handleFileUpload","e","uploadData","FormData","append","target","files","filesService","response","data","secure_url","setState","handleInputChange","handleFormSubmit","preventDefault","authService","state","history","push","message","FilesService","LoginForm","RouterService","getUser","userId","editUser","user","put","getAllRoutes","getOneRoute","getMyRoutes","createRoute","route","addPoint","point","addRock","rock","getOnePoint","pointId","editRoute","editPoint","editRock","deleteRoute","toDelete","deletePoint","deleteRock","Map","points","markers","mapTypeId","defaultCenter","defaultZoom","path","geodesic","options","strokeColor","strokeOpacity","strokeWeight","map","idx","key","position","lat","lng","label","React","withScriptjs","withGoogleMap","googleMapsApiKey","MapComp","places","p","parseFloat","location","centerRoute","Math","ceil","length","loadingElement","containerElement","mapElement","googleMapURL","style","height","EditProfile","routeService","handleUserSubmit","RouteService","ProfilePage","componentDidMount","getAllInfo","userData","routesFiltered","filter","userRoutes","handleModal","status","showModal","loggedUser","match","params","undefined","Spinner","animation","role","Card","text","Body","Title","description","size","marginBottom","Modal","show","onHide","selectedRoute","setSelectedRoute","maps","onCloseClick","routeId","GeneralMap","initialPoints","routes","centerLoc","AllRoutes","updateRouteList","geolocation","navigator","getCurrentPosition","coords","latitude","longitude","HomeNotLoggedIn","fluid","RouteForm","CreateRoute","owner","MyRoutes","PointForm","AddPoint","updatePointList","rocks","interval","setInterval","RockForm","controlId","rockType","samplesId","photos","photo","dataType","AddRockForm","concat","handleRockSubmit","pointIdClicked","RouteCreation","hasPoints","MyResponsivePie","countRocks","hasOwnProperty","Sedimentary","Igneous","Metamorphic","margin","top","right","bottom","left","startAngle","endAngle","innerRadius","padAngle","cornerRadius","colors","scheme","borderWidth","borderColor","from","modifiers","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","slicesLabelsSkipAngle","slicesLabelsTextColor","animate","motionStiffness","motionDamping","legends","anchor","direction","translateY","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","effects","on","RouteDetails","getRouteInfo","sort","a","b","rockTypeCount","setTimeout","isFinished","Accordion","Header","eventKey","directions","EditRouteInfo","EditPoint","EditRock","rockId","Edit","ownerId","pointsId","rocksId","App","fetchUser","exact","render","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3eca76d2.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default class AuthService {\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}`,\n            withCredentials: true\n        })\n    }\n\n    login = credentials => this.service.post('/login', credentials)\n    signup = credentials => this.service.post('/signup', credentials)\n    logout = () => this.service.post('/logout')\n    isLoggedIn = () => this.service.get('/loggedin')\n}","import React, { Component } from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Image from 'react-bootstrap/Image'\nimport AuthService from './../../../service/AuthService'\nimport { Link, NavLink } from 'react-router-dom'\nimport './index.css'\nimport GeoImg from './../../img/logo.png'\n\nclass Navigation extends Component {\n    constructor(props) {\n        super(props)\n        this.AuthService = new AuthService()\n    }\n\n    logout = () => {\n        this.AuthService\n            .logout()\n            .then(() => {\n                this.props.setTheUser(false)\n                this.props.handleToast(true, 'Usuario desconectado')\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\" >\n                <Navbar.Brand>\n                    <Link to=\"/\"><img className='navLogo' src={GeoImg} alt=\"GeologistLogo\" /> GeoMapping_</Link>\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"ml-auto\">\n                        {this.props.loggedInUser ?\n                            (\n                                <>\n                                    <Nav.Link as=\"span\">\n                                        <NavLink to=\"/myRoutes\" activeStyle={{ color: 'white' }}>Your Routes</NavLink>\n                                    </Nav.Link>\n                                    <Nav.Link as=\"span\">\n                                        <NavLink to=\"/createRoute\" activeStyle={{ color: 'white' }}>Create a new route</NavLink>\n                                    </Nav.Link>\n                                    <Nav.Link as=\"span\">\n                                        <span onClick={this.logout}>Log Out</span>\n                                    </Nav.Link>\n                                    <Nav.Link as=\"span\">\n                                        <NavLink to={`/profile/${this.props.loggedInUser._id}`} activeStyle={{ color: 'white' }}><Image className=\"navAvatar\" src={this.props.loggedInUser.avatar} roundedCircle /></NavLink>\n                                    </Nav.Link>\n                                </>\n                            ) : (\n                                <>\n                                    <Nav.Link as=\"span\">\n                                        <NavLink to=\"/signup\" activeStyle={{ color: 'white' }}>Sign Up</NavLink>\n                                    </Nav.Link>\n                                    <Nav.Link as=\"span\">\n                                        <NavLink to=\"/login\" activeStyle={{ color: 'white' }}>Log In</NavLink>\n                                    </Nav.Link>\n                                </>\n                            )\n                        }\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n\n        )\n    }\n}\n\nexport default Navigation","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/files`,\n            withCredentials: true\n        })\n    }\n\n    handleUpload = theFile => this.service.post('/upload', theFile)\n}","import React from 'react'\n\nimport Button from \"react-bootstrap/Button\"\nimport Form from \"react-bootstrap/Form\"\nimport Container from \"react-bootstrap/Container\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\n\nconst UserForm = props => {\n    return (\n        <Container as=\"main\">\n        <Row>\n          <Col md={{ offset: 3, span: 6 }}>\n            <h3>User</h3>\n\n            <hr></hr>\n\n            <Form onSubmit={props.onSubmit}>\n              <Form.Group>\n                <Form.Label>User Name</Form.Label>\n                <Form.Control onChange={props.inputChange} value={props.username} name=\"username\" type=\"text\" />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Password</Form.Label>\n                <Form.Control onChange={props.inputChange} value={props.password} name=\"password\" type=\"password\" />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Description</Form.Label>\n                <Form.Text className=\"text-muted\">Tell us a bit about yourself.</Form.Text>\n                <Form.Control as=\"textarea\" onChange={props.inputChange} value={props.aboutMe} name=\"aboutMe\" type=\"text\" />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Avatar (file)</Form.Label>\n                <Form.Control name=\"avatar\" type=\"file\" onChange={props.fileUpload} />\n              </Form.Group>\n\n              <Button variant=\"dark\" type=\"submit\">Done!</Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    )\n}\n\nexport default UserForm","import React, { Component } from \"react\"\nimport AuthService from \"../../../service/AuthService\"\nimport FilesService from '../../../service/FilesService'\nimport UserForm from './../../forms/userForm'\n\nclass SignupForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: '',\n      password: '',\n      avatar: '',\n      aboutMe: ''\n    }\n    this.authService = new AuthService()\n    this.filesService = new FilesService()\n  }\n\n  handleFileUpload = e => {\n    const uploadData = new FormData()\n    uploadData.append('photo', e.target.files[0])\n\n    this.filesService.handleUpload(uploadData)\n      .then(response => {\n        console.log('Subida de archivo finalizada! La URL de Cloudinary es: ', response.data.secure_url)\n        this.setState({ avatar: response.data.secure_url })\n      })\n      .catch(err => console.log(err))\n  }\n  \n  handleInputChange = (e) => {\n    const { name, value } = e.target\n    this.setState({ [name]: value })\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault()\n    this.authService.signup(this.state)\n      .then((response) => {\n        this.props.setTheUser(response.data);\n        this.props.history.push('/')\n      })\n      .catch((err) => console.log(err.response.data.message));\n  }\n\n  render() {\n    return (\n      <UserForm {...this.state} onSubmit={this.handleFormSubmit} fileUpload={this.handleFileUpload} inputChange={this.handleInputChange} /> \n    )\n  }\n}\n\nexport default SignupForm\n","import React, { Component } from 'react'\nimport AuthService from '../../../service/AuthService'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: ''\n        }\n        this.authService = new AuthService()\n    }\n\n    handleInputChange = e => {\n        const { name, value } = e.target \n        this.setState({ [name]: value })\n    }\n\n    handleFormSubmit = e => {\n        e.preventDefault()\n        this.authService\n            .login(this.state)\n            .then(response => {\n                this.props.setTheUser(response.data)\n                this.props.history.push('/')\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col md={{ offset: 3, span: 6 }}>\n                        <h3>Log In</h3>\n\n                        <hr></hr>\n\n                        <Form onSubmit={this.handleFormSubmit}>\n                            <Form.Group>\n                                <Form.Label>User Name</Form.Label>\n                                <Form.Control onChange={this.handleInputChange} value={this.state.username} name='username'type='text' />\n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control onChange={this.handleInputChange} value={this.state.password} name='password' type='password' />\n                            </Form.Group>\n\n                            <Button variant='dark' type='submit'>Log In</Button>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default LoginForm","import axios from 'axios'\n\nexport default class RouterService {\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/routes`,\n            withCredentials: true\n        })\n    }\n\n    getUser = userId => this.service.get(`/getUser/${userId}`)\n    editUser = user => this.service.put('/editProfile', user)\n    getAllRoutes = () => this.service.get('/getAllRoutes')\n    getOneRoute = id => this.service.get(`/getOneRoute/${id}`)\n    getMyRoutes = userId => this.service.get(`/getMyRoutes/${userId}`)\n    createRoute = route => this.service.post(`/createNewRoute`, route)\n    addPoint = point => this.service.post('/addPoint', point)\n    addRock = rock => this.service.post('/addRock', rock)\n    getOnePoint = pointId => this.service.get(`/getOnePoint/${pointId}`)\n    editRoute = route => this.service.put('/editRoute', route)\n    editPoint = point => this.service.put('/editPoint', point)\n    editRock = rock => this.service.put('/editRock', rock)\n    deleteRoute = toDelete => this.service.post('/deleteRoute', toDelete)\n    deletePoint = toDelete => this.service.post('/deletePoint', toDelete)\n    deleteRock = toDelete => this.service.post('/deleteRock', toDelete)\n}","import React from \"react\";\n\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  Marker,\n  Polyline\n} from \"react-google-maps\"\n\nclass Map extends React.Component {\n  state = {\n    points: this.props.markers\n  }\n\n  render() {\n    return (\n      <GoogleMap mapTypeId=\"satellite\" defaultCenter={this.props.defaultCenter} defaultZoom={this.props.defaultZoom}>\n        <Polyline\n          path={this.state.points}\n          geodesic={true}\n          options={{\n            strokeColor: \"#ff2527\",\n            strokeOpacity: 0.75,\n            strokeWeight: 2\n          }}\n        />\n        {this.state.points.map((point, idx) => <Marker key={idx} position={{ lat: point.lat, lng: point.lng }} label={point.name} />)}\n      </GoogleMap>\n    )\n  }\n}\n\nexport default withScriptjs(withGoogleMap(Map))","import React from 'react'\nimport Map from './map'\nimport { Link } from 'react-router-dom';\n\nconst googleMapsApiKey = `${process.env.REACT_APP_MAPS_KEYS}`\n\nconst MapComp = props => {\n  const places = props.points.map(p => ({ lat: parseFloat(p.location.lat), lng: parseFloat(p.location.lng), name: p.name }))\n  let centerRoute = Math.ceil(places.length / 2) - 1\n  let lat = places[centerRoute].lat, lng = places[centerRoute].lng\n\n  const {\n    loadingElement,\n    containerElement,\n    mapElement,\n    defaultCenter,\n    defaultZoom\n  } = props\n\n  return (\n    <>\n      <Map\n        googleMapURL={\n          'https://maps.googleapis.com/maps/api/js?key=' +\n          googleMapsApiKey +\n          '&libraries=geometry,drawing,places'\n        }\n        markers={places}\n        loadingElement={loadingElement || <div style={{ height: `100%` }} />}\n        containerElement={containerElement || <div style={{ height: \"600px\" }} />}\n        mapElement={mapElement || <div style={{ height: `100%` }} />}\n        defaultCenter={defaultCenter || { lat: lat, lng: lng }}\n        defaultZoom={defaultZoom || 20}\n      />\n      <Link to={`/routeDetails/${props._id}`}>\n\n\n      </Link>\n    </>\n  )\n}\n\nexport default MapComp","import React, {Component} from 'react'\nimport RouteService from './../../../service/RoutesService'\nimport FilesService from '../../../service/FilesService'\nimport UserForm from './../../forms/userForm'\n\nclass EditProfile extends Component {\n    constructor (props) {\n        super (props)\n        this.state = {\n            userId: this.props._id,\n            username: this.props.username,\n            password: '',\n            avatar: this.props.avatar,\n            aboutMe: this.props.aboutMe\n        }\n        this.routeService = new RouteService()\n        this.filesService = new FilesService()\n    }\n\n    handleInputChange = e => {\n        const { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n   \n    handleFileUpload = e => {\n        const uploadData = new FormData()\n        uploadData.append('photo', e.target.files[0])\n    \n        this.filesService.handleUpload(uploadData)\n          .then(response => {\n            console.log('Subida de archivo finalizada! La URL de Cloudinary es: ', response.data.secure_url)\n            this.setState({avatar: response.data.secure_url})\n          })\n          .catch(err => console.log(err))\n    }\n\n    handleFormSubmit = e => {\n        e.preventDefault()\n        this.routeService.editUser(this.state)\n            .then(() => this.props.handleUserSubmit())\n            .catch(err => console.log(err))\n    }\n\n    render () {\n        return (\n            <UserForm {...this.state} onSubmit={this.handleFormSubmit} fileUpload={this.handleFileUpload} inputChange={this.handleInputChange} /> \n        )\n    }\n}\n\nexport default EditProfile","import React, { Component } from 'react'\nimport RouteService from './../../../service/RoutesService'\nimport MapComp from './../../ui/routeMap'\nimport Col from 'react-bootstrap/Col'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport { Link } from 'react-router-dom'\n\nimport Modal from \"react-bootstrap/Modal\"\nimport EditProfile from '../editUser'\n\nclass ProfilePage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loggedUser: this.props.loggedInUser._id,\n            userId: this.props.match.params.id,\n            userData: undefined,\n            showModal: false\n        }\n        this.routeService = new RouteService()\n    }\n\n    componentDidMount = () => this.getAllInfo()\n\n    getAllInfo = () => {\n        this.routeService.getUser(this.state.userId)\n            .then(response => this.setState({ userData: response.data }))\n            .catch(err => console.log(err))\n\n        this.routeService.getMyRoutes(this.state.userId)\n            .then(response => {\n                let routesFiltered = []\n                response.data.filter(route => route.points.length > 0 ? routesFiltered.push(route) : null)\n                this.setState({ userRoutes: routesFiltered })\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleModal = status => this.setState({ showModal: status })\n\n    handleUserSubmit = () => {\n        this.handleModal(false)\n        this.getAllInfo()\n    }\n\n    render() {\n        return (\n            <>\n                {!this.state.userRoutes ? <Spinner animation=\"grow\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner> :\n\n                    <Row className='profileInfo'>\n                        <Col md={4}>\n                            <img className='profileImg' src={this.state.userData.avatar} alt='profileImg' />\n                        </Col>\n                        <Col md={8}>\n                            <h1>{this.state.userData.username}</h1>\n                            <p>{this.state.userData.aboutMe}</p>\n                        </Col>\n                    </Row>\n                }\n                {this.state.userId !== this.state.loggedUser ?\n                    <Container>\n                        <h2 className='innerTitle'>Routes</h2>\n                        <Row>\n                            {!this.state.userRoutes ? <Spinner animation=\"grow\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner> : this.state.userRoutes.map(route =>\n                                <Col className='route' md={4}>\n                                    <Card bg='dark' text='white' className='routeCard'>\n                                        <MapComp defaultZoom={15} {...route} />\n                                        <Card.Body>\n                                            <Card.Title>{route.name}</Card.Title>\n                                            <small>{route.description}</small>\n                                            <Link to={`/routeDetails/${route._id}`} className=\"btn btn-primary btn-block btn-sm\">See Details</Link>\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            )}\n                        </Row>\n                    </Container>\n                    :\n                    <div className='editRoute'>\n                        <Button onClick={() =>  this.handleModal(true) } variant=\"dark\" size=\"sm\" style={{ marginBottom: '20px' }}>Edit your profile!</Button>\n                    </div>\n                }\n\n                <Modal size=\"lg\" show={this.state.showModal} onHide={() => this.handleModal(false)}>\n                    <Modal.Body>\n                        <EditProfile {...this.state.userData} handleUserSubmit={this.handleUserSubmit} />\n                    </Modal.Body>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default ProfilePage","import React from \"react\"\n\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  Marker,\n  InfoWindow\n} from \"react-google-maps\"\n\nimport { Link } from 'react-router-dom'\n\nclass Map extends React.Component {\n  state = {\n    points: this.props.markers,\n    selectedRoute: null\n  }\n\n  setSelectedRoute = point => {\n    this.setState({ selectedRoute: point })\n  }\n\n  render() {\n    return (\n      <>\n        <GoogleMap mapTypeId=\"satellite\" defaultCenter={this.props.defaultCenter} defaultZoom={this.props.defaultZoom} options={function (maps) { return { mapTypeId: \"satellite\" } }}>\n          {this.state.points.map((point, idx) => <Marker key={idx} position={{ lat: point.lat, lng: point.lng }} onClick={() => this.setSelectedRoute(point)} />)}\n        </GoogleMap>\n\n        {this.state.selectedRoute && (<InfoWindow onCloseClick={() => this.setSelectedRoute(null)} position={{ lat: this.state.selectedRoute.lat, lng: this.state.selectedRoute.lng }}>\n          <>\n            <Link to={`routeDetails/${this.state.selectedRoute.routeId}`}>Route: {this.state.selectedRoute.name}</Link>\n          </>\n        </InfoWindow>\n        )}\n      </>\n    )\n  }\n}\n\nexport default withScriptjs(withGoogleMap(Map))","import React from 'react'\nimport Map from './map'\n\nconst googleMapsApiKey = `${process.env.REACT_APP_MAPS_KEYS}`\n\nconst GeneralMap = props => {\n  const initialPoints = props.routes.map(route => ({ lat: parseFloat(route.points[0].location.lat), lng: parseFloat(route.points[0].location.lng), name: route.name, routeId: route._id }))\n  let lat = props.centerLoc.lat, lng = props.centerLoc.lng\n\n  const {\n    loadingElement,\n    containerElement,\n    mapElement,\n    defaultCenter,\n    defaultZoom\n  } = props\n\n  return (\n    <Map\n      googleMapURL={\n        'https://maps.googleapis.com/maps/api/js?key=' +\n        googleMapsApiKey +\n        '&libraries=geometry,drawing,places'\n      }\n      markers={initialPoints}\n      loadingElement={loadingElement || <div style={{ height: 'inherit' }} />}\n      containerElement={containerElement || <div style={{ height: 'inherit' }} />}\n      mapElement={mapElement || <div style={{ height: 'inherit' }} />}\n      defaultCenter={defaultCenter || { lat: lat, lng: lng }}\n      defaultZoom={defaultZoom || 20}\n    />\n  )\n}\n\nexport default GeneralMap","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport RouteService from './../../../service/RoutesService'\nimport Spinner from 'react-bootstrap/Spinner'\nimport MapComp from './../../ui/routeMap'\nimport GeneralMap from './generalMap'\nimport Card from 'react-bootstrap/Card'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\n\nclass AllRoutes extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            routes: undefined,\n            location: undefined\n        }\n        this.routeService = new RouteService()\n    }\n\n    componentDidMount = () => {\n        this.updateRouteList()\n        this.geolocation()\n    }\n\n    geolocation() {\n        navigator.geolocation.getCurrentPosition(position => {\n            this.setState({\n                location: {\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude\n                }\n            })\n        })\n    }\n\n    updateRouteList = () => {\n        this.routeService\n            .getAllRoutes()\n            .then(response => {\n                let routesFiltered = []\n                response.data.filter(route => route.points.length > 0 ? routesFiltered.push(route) : null)\n                this.setState({ routes: routesFiltered })\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <>\n                {!this.state.location ?\n                    <Spinner animation=\"grow\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner> :\n                    <>\n                        <h2 className='innerTitle'>Routes around you</h2>\n\n                        <div className='generalMap'>\n                            {!this.state.routes ? <Spinner animation=\"grow\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner> : <GeneralMap defaultZoom={10} routes={this.state.routes} centerLoc={this.state.location} />}\n                        </div>\n\n                        <Container>\n                            <h2 className='innerTitle'>Routes of all the users</h2>\n\n                            <Row className='allRoutes'>\n                                {!this.state.routes ? <Spinner animation=\"grow\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner> : this.state.routes.map((route, idx) =>\n\n                                    <Col key={idx} className='route' md={4}>\n                                        <Card bg='dark' text='white' className='routeCard'>\n                                            <MapComp defaultZoom={15} {...route} />\n                                            <Card.Body>\n                                                <Card.Title>{route.name}</Card.Title>\n                                                <small>{route.description}</small>\n                                                <Link to={`/routeDetails/${route._id}`} className=\"btn btn-primary btn-block btn-sm\">See Details</Link>\n                                            </Card.Body>\n                                        </Card>\n                                    </Col>\n                                )}\n                            </Row>\n                        </Container>\n                    </>\n                }\n            </>\n        )\n    }\n}\n\nexport default AllRoutes","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { Link } from 'react-router-dom'\nimport GeoImg from './../../img/logo.png'\n\nconst HomeNotLoggedIn = () => {\n\n    return (\n        <Container fluid>\n            <Row className='title'>\n                <section >\n\n                    <h1><span><img className='topLogo' src={GeoImg} alt=\"GeologistLogo\" />GeoMapping_</span></h1>\n                    <p className='subtitle'>The new connecting tool for Geologists.</p>\n                </section>\n            </Row>\n\n            <Row className='share section'>\n                <Col md={6} className='img'>\n                    <section className='sectionText'>\n                        <h2><span>Share your Field investigations</span></h2>\n                        <p className='p-presentation'>Join a community where Geologists can share their investigation in the field, using Google maps integration to create routes with points of observation, all while working.</p>\n                    </section>\n                </Col>\n            </Row>\n\n            <Row className='mapImg section'>\n                <Col md={6}>\n\n                </Col>\n                <Col md={6}>\n                    <section className='sectionText'>\n                        <h2><span>Access to information around you</span></h2>\n                        <p className='p-presentation'>With Geolocation enabled, you can see other routes and check the information other Geologists have collected.</p>\n                    </section>\n\n                </Col>\n            </Row>\n\n            <Row className='signup'>\n                <Col md={4}>\n                    <section className='sectionText'>\n                        <h2><span>Ready?</span></h2>\n                        <p className='p-presentation'>Join us.</p>\n                    </section>\n                </Col>\n                <Col md={4}>\n                    <Link className='signUpBtn' to='/signup'>Sign Up</Link>\n                </Col>\n                <Col md={4}>\n                    <img className='bottomLogo' src={GeoImg} alt=\"GeologistLogo\" />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default HomeNotLoggedIn","import React from 'react'\n\nimport Button from \"react-bootstrap/Button\"\nimport Form from \"react-bootstrap/Form\"\n\nconst RouteForm = props => {\n    return (\n        <Form onSubmit={props.onSubmit}>\n            <Form.Group>\n                <Form.Label>Route Name</Form.Label>\n                <Form.Control onChange={props.inputChange} value={props.name} name=\"name\" type=\"text\" />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>Description of the Route</Form.Label>\n                <Form.Control as=\"textarea\" onChange={props.inputChange} value={props.description} name=\"description\" type=\"text\" />\n            </Form.Group>\n\n            <Button variant=\"dark\" type=\"submit\">Done!</Button>\n        </Form>\n    )  \n}\n\nexport default RouteForm","import React, {Component} from 'react'\nimport RouteService from './../../../service/RoutesService'\nimport Container from \"react-bootstrap/Container\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\n\nimport RouteForm from './../../forms/routeForm'\n\nclass CreateRoute extends Component {\n    constructor (props) {\n        super (props)\n        this.state = {\n            name: '',\n            description: '',\n            owner: props.loggedInUser._id,\n            points: []\n        }\n        this.routeService = new RouteService()\n    }\n\n    handleInputChange = e => {\n        const { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    handleFormSubmit = e => {\n        e.preventDefault()\n        this.routeService\n            .createRoute(this.state)\n            .then(response => {\n                this.props.history.push(`/routeCreation/${response.data._id}`)\n            })\n            .catch((err) => console.log(err.response.data.message))\n    }\n\n    render () {\n        return (\n            <Container as=\"main\">\n                <Row>\n                    <Col md={{ offset: 3, span: 6 }}>\n                    <h3>New Route</h3>\n\n                    <hr></hr>\n                        <RouteForm {...this.state} onSubmit={this.handleFormSubmit} inputChange={this.handleInputChange} />\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default CreateRoute","import React, { Component } from 'react'\nimport RouteService from './../../../service/RoutesService'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Card from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { Link } from 'react-router-dom'\nimport MapComp from './../../ui/routeMap'\n\nclass MyRoutes extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            userId: props.loggedInUser._id,\n            routes: undefined\n        }\n        this.routeService = new RouteService()\n    }\n\n    componentDidMount = () => this.updateRouteList()\n\n    updateRouteList = () => {\n        this.routeService\n            .getMyRoutes(this.state.userId)\n            .then(response => {\n                let routesFiltered = []\n                response.data.filter(route => route.points.length > 0 ? routesFiltered.push(route) : null)\n                this.setState({ routes: routesFiltered })\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <Container>\n                <h2 className='innerTitle'>Your Routes</h2>\n                <Row>\n                    {!this.state.routes ? <Spinner animation=\"grow\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner> : this.state.routes.map(route =>\n                        <Col className='route' md={4}>\n                            <Card bg='dark' text='white' className='routeCard'>\n                                <MapComp defaultZoom={15} {...route} />\n                                <Card.Body>\n                                    <Card.Title>{route.name}</Card.Title>\n                                    <small>{route.description}</small>\n                                    <Link to={`/routeDetails/${route._id}`} className=\"btn btn-primary btn-block btn-sm\">See Details</Link>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    )}\n                </Row>\n\n            </Container>\n        )\n    }\n}\n\nexport default MyRoutes","import React from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nconst PointForm = props => {\n    return (\n        <Form onSubmit={props.onSubmit}>\n            <Form.Group>\n                <Form.Label>Lat</Form.Label>\n                <Form.Control onChange={props.inputChange} value={props.lat} name=\"lat\" type=\"text\" />\n                <Form.Label>Lon</Form.Label>\n                <Form.Control onChange={props.inputChange} value={props.lng} name=\"lng\" type=\"text\" />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>Name of the point</Form.Label>\n                <Form.Control onChange={props.inputChange} value={props.name} name=\"name\" type=\"text\" />\n            </Form.Group>\n\n            <Button variant=\"dark\" type=\"submit\">Done!</Button>\n        </Form>\n    )  \n}\n\nexport default PointForm","import React, { Component } from 'react'\nimport RouteService from '../../../service/RoutesService'\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport PointForm from '../../forms/pointForm'\n\nclass AddPoint extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            routeId: props.match.params.id,\n            name: undefined,\n            lat: undefined,\n            lng: undefined,\n            rocks: []\n        }\n        this.routeService = new RouteService()\n    }\n    componentDidMount = () => this.geolocation()\n\n    geolocation() {\n        this.interval = setInterval(() => {\n            navigator.geolocation.getCurrentPosition(position => {\n                this.setState({\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude\n                })\n            })\n        }, 3000)\n    }\n\n    handleInputChange = e => {\n        const { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    handleFormSubmit = e => {\n        e.preventDefault()\n        this.routeService\n            .addPoint(this.state)\n            .then(() => this.props.updatePointList())\n            .catch((err) => console.log(err.response.data.message))\n    }\n\n    render() {\n        return (\n            <>\n                <Row>\n                    <Col md={6}>\n                        <h3>New Point</h3>\n\n                        <hr></hr>\n                        <PointForm {...this.state} onSubmit={this.handleFormSubmit} inputChange={this.handleInputChange} />\n                    </Col>\n                </Row>\n            </>\n        )\n    }\n}\n\nexport default AddPoint","import React from 'react'\n\nimport Button from \"react-bootstrap/Button\"\nimport Form from \"react-bootstrap/Form\"\n\nconst RockForm = props => {\n    return (\n        <Form onSubmit={props.onSubmit}>\n            <Form.Group>\n                <Form.Label>Name</Form.Label>\n                <Form.Control onChange={props.inputChange} value={props.name} name=\"name\" type=\"text\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <Form.Label>Type of Rock</Form.Label>\n                <Form.Control as='select' onChange={props.inputChange} value={props.rockType} name=\"rockType\" type=\"text\">\n                    <option value='0'>Choose one!</option>\n                    <option value='Sedimentary'>Sedimentary</option>\n                    <option value='Igneous'>Igneous</option>\n                    <option value='Metamorphic'>Metamorphic</option>\n                </Form.Control>\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>Description</Form.Label>\n                <Form.Control as='textarea' onChange={props.inputChange} value={props.description} name=\"description\" type=\"text\" />\n            </Form.Group>\n            \n            <Form.Group>\n                <Form.Label>Samples</Form.Label>\n                <Form.Control onChange={props.inputChange} value={props.samplesId} name=\"samplesId\" type=\"text\" />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>Photos</Form.Label>\n                <Form.Control onChange={props.fileUpload} name=\"photos\" type=\"file\" />\n                <p>Added photos: </p>\n                {props.photos.map(photo => <img className='rockImg' src={photo} alt='rockImg' />)}\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>Directions</Form.Label>\n\n                <Form.Text className=\"text-muted\">Type of data</Form.Text>\n                <Form.Control as='select' onChange={props.inputChange} value={props.dataType} name=\"dataType\" type=\"text\">\n                    <option value='0'>Choose one!</option>\n                    <option value='none'>none</option>\n                    <option value='Direction and Dip'>Direction and Dip</option>\n                    <option value='Lineation'>Lineation</option>\n                    <option value='Foliation'>Foliation</option>\n                </Form.Control>\n\n                <Form.Text className=\"text-muted\">Data</Form.Text>\n                <Form.Control onChange={props.inputChange} value={props.data} name=\"data\" type=\"text\" />\n            </Form.Group>\n\n            <Button variant=\"dark\" type=\"submit\">Done!</Button>\n        </Form>\n    )  \n}\n\nexport default RockForm","import React, { Component } from 'react'\nimport RouteService from '../../../service/RoutesService'\nimport FilesService from '../../../service/FilesService'\nimport RockForm from '../../forms/rockForm'\n\nclass AddRockForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            pointId: props.pointIdClicked,\n            name: '',\n            rockType: '',\n            description: '',\n            samplesId: '',\n            photos: [],\n            dataType: '',\n            data: ''\n        }\n        this.routeService = new RouteService()\n        this.filesService = new FilesService()\n    }\n\n    handleInputChange = e => {\n        const { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    handleFileUpload = e => {\n        const uploadData = new FormData()\n        uploadData.append('photo', e.target.files[0])\n    \n        this.filesService.handleUpload(uploadData)\n          .then(response => {\n            console.log('Subida de archivo finalizada! La URL de Cloudinary es: ', response.data.secure_url)\n            this.setState({photos: this.state.photos.concat(response.data.secure_url)})\n          })\n          .catch(err => console.log(err))\n    }\n\n    handleFormSubmit = e => {\n        e.preventDefault()\n        this.routeService\n            .addRock(this.state)\n            .then(() => this.props.handleRockSubmit())\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <>\n                <h3>Add a new rock to this point</h3>\n                <hr></hr>\n\n                <RockForm {...this.state} onSubmit={this.handleFormSubmit} fileUpload={this.handleFileUpload} inputChange={this.handleInputChange} />\n            </>\n        )\n    }\n}\nexport default AddRockForm","import React, { Component } from 'react'\nimport RouteService from '../../../service/RoutesService'\nimport AddPoint from './addPoint'\nimport AddRock from './addRock'\nimport MapComp from './../../ui/routeMap'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\n\n\nclass RouteCreation extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            routeId: props.match.params.id,\n            route: undefined,\n            hasPoints: false,\n            pointIdClicked: undefined,\n            showModal: false\n        }\n        this.routeService = new RouteService()\n    }\n\n    componentDidMount = () => this.updatePointList()\n\n    updatePointList = () => {\n        this.routeService\n            .getOneRoute(this.state.routeId)\n            .then(response => {\n                this.setState({ route: response.data })\n                if (response.data.points.length > 0) {\n                    this.setState({ hasPoints: true })\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleModal = status => this.setState({ showModal: status })\n    pointIdClicked = pointId => this.setState({ pointIdClicked: pointId })\n\n    handleRockSubmit = () => {\n        this.handleModal(false)\n        this.updatePointList()\n    }\n\n    render() {\n        return (\n            <Container fluid>\n                <h1 className='innerTitle'>Add points to the route while you are working!</h1>\n                <Row>\n                    <Col md={6}>\n                        <div className='detailMap'>\n                            {!this.state.hasPoints ? <Spinner animation=\"grow\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner> : <MapComp defaultZoom={15} {...this.state.route} />}\n                        </div>\n                    </Col>\n                    <Col md={6}>\n                        <AddPoint {...this.props} updatePointList={this.updatePointList} routeId={this.state.routeId} />\n                        <h3>Points added:</h3>\n                        <hr />\n                        {!this.state.route ? <Spinner animation=\"grow\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner> :\n                            <>\n                                {this.state.route.points.map(point =>\n                                    <Button key={point._id} onClick={() => { this.handleModal(true); this.pointIdClicked(point._id) }} variant=\"dark\" size=\"sm\" style={{ marginBottom: '20px' }}>{point.name}</Button>\n                                )}\n                            </>}\n                    </Col>\n                </Row>\n\n                <Modal size=\"lg\" show={this.state.showModal} onHide={() => this.handleModal(false)}>\n                    <Modal.Body>\n                        <AddRock pointIdClicked={this.state.pointIdClicked} handleRockSubmit={this.handleRockSubmit} />\n                    </Modal.Body>\n                </Modal>\n            </Container>\n        )\n    }\n}\n\nexport default RouteCreation","import React from 'react'\nimport { ResponsivePie } from '@nivo/pie'\n\nconst MyResponsivePie = props => {\n    let data = []\n\n    if(props.countRocks.hasOwnProperty('Sedimentary')) {\n        data.push(\n            {\n                \"id\": \"Sedimentary\",\n                \"label\": \"Sedimentary\",\n                \"value\": props.countRocks.Sedimentary,\n                \"color\": \"hsl(107, 70%, 50%)\"\n            }\n        )\n    }\n\n    if(props.countRocks.hasOwnProperty('Igneous')) {\n        data.push(\n            {\n                \"id\": \"Igneous\",\n                \"label\": \"Igneous\",\n                \"value\": props.countRocks.Igneous,\n                \"color\": \"hsl(107, 70%, 50%)\"\n            }\n        )\n    }\n\n    if(props.countRocks.hasOwnProperty('Metamorphic')) {\n        data.push(\n            {\n                \"id\": \"Metamorphic\",\n                \"label\": \"Metamorphic\",\n                \"value\": props.countRocks.Metamorphic,\n                \"color\": \"hsl(107, 70%, 50%)\"\n            }\n        )\n    }\n\n    return (\n        <ResponsivePie\n            data={data}\n            margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\n            startAngle={-180}\n            endAngle={354}\n            innerRadius={0.7}\n            padAngle={0}\n            cornerRadius={0}\n            colors={{ scheme: 'nivo' }}\n            borderWidth={1}\n            borderColor={{ from: 'color', modifiers: [['darker', '0.5']] }}\n            radialLabelsSkipAngle={14}\n            radialLabelsTextXOffset={16}\n            radialLabelsTextColor=\"#333333\"\n            radialLabelsLinkOffset={-9}\n            radialLabelsLinkDiagonalLength={16}\n            radialLabelsLinkHorizontalLength={24}\n            radialLabelsLinkStrokeWidth={1}\n            radialLabelsLinkColor={{ from: 'color' }}\n            slicesLabelsSkipAngle={15}\n            slicesLabelsTextColor=\"#333333\"\n            animate={true}\n            motionStiffness={90}\n            motionDamping={15}\n            legends={[\n                {\n                    anchor: 'bottom',\n                    direction: 'row',\n                    translateY: 56,\n                    itemWidth: 100,\n                    itemHeight: 18,\n                    itemTextColor: '#999',\n                    symbolSize: 18,\n                    symbolShape: 'circle',\n                    effects: [\n                        {\n                            on: 'hover',\n                            style: {\n                                itemTextColor: '#000'\n                            }\n                        }\n                    ]\n                }\n            ]}\n        />)\n\n\n}\n\n\nexport default MyResponsivePie\n\n// let data = [\n//     {\n//         \"id\": \"sedimentary\",\n//         \"label\": \"Sedimentary\",\n//         \"value\": props.countRocks.Sedimentary,\n//         \"color\": \"hsl(107, 70%, 50%)\"\n//     },\n//     {\n//         \"id\": \"igneous\",\n//         \"label\": \"Igneous\",\n//         \"value\": props.countRocks.Igneous,\n//         \"color\": \"hsl(68, 70%, 50%)\"\n//     },\n//     {\n//         \"id\": \"metamorphic\",\n//         \"label\": \"Metamorphic\",\n//         \"value\": props.countRocks.Metamorphic,\n//         \"color\": \"hsl(312, 70%, 50%)\"\n//     },\n// ]","import React, { Component } from 'react'\nimport RouterService from '../../../service/RoutesService'\nimport Spinner from \"react-bootstrap/Spinner\"\nimport Container from \"react-bootstrap/Container\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Accordion from \"react-bootstrap/Accordion\"\nimport Card from \"react-bootstrap/Card\"\nimport MapComp from './../../ui/routeMap'\nimport { Link } from 'react-router-dom'\nimport PieChart from './../../ui/visualData/pieChart'\n\nclass RouteDetails extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            userId: props.loggedInUser._id,\n            routeId: props.match.params.id,\n            route: undefined,\n            points: [],\n            countRocks: {},\n            isFinished: false\n        }\n        this.routeService = new RouterService()\n    }\n\n    componentDidMount = () => {\n        this.getRouteInfo()\n    }\n\n    getRouteInfo = () => {\n        this.routeService.getOneRoute(this.state.routeId)\n            .then(response => {\n                this.setState({ route: response.data })\n                response.data.points.map(point => {\n                    this.routeService.getOnePoint(point._id)\n                        .then(response => {\n                            this.setState({ points: this.state.points.concat(response.data).sort((a, b) => (a._id > b._id) ? 1 : -1) })\n                            this.rockTypeCount(response.data)\n                        })\n                })\n            })\n            .then(() => setTimeout(() => this.setState({ isFinished: true }), 500))\n            .catch(err => console.log(err))\n    }\n\n    rockTypeCount = point => {\n        point.rocks.map(rock => {\n            if (rock.rockType === 'Sedimentary') {\n                if (!this.state.countRocks.hasOwnProperty('Sedimentary')) {\n                    this.state.countRocks.Sedimentary = 1\n                } else {\n                    this.state.countRocks.Sedimentary += 1\n                }\n            }\n            if (rock.rockType === 'Igneous') {\n                if (!this.state.countRocks.hasOwnProperty('Igneous')) {\n                    this.state.countRocks.Igneous = 1\n                } else {\n                    this.state.countRocks.Igneous += 1\n                }\n            }\n            if (rock.rockType === 'Metamorphic') {\n                if (!this.state.countRocks.hasOwnProperty('Metamorphic')) {\n                    this.state.countRocks.Metamorphic = 1\n                } else {\n                    this.state.countRocks.Metamorphic += 1\n                }\n            }\n        })\n    }\n\n    render() {\n        return (\n            <Container fluid>\n                {!this.state.route ? <Spinner animation=\"grow\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner> :\n                    <>\n                        <h2 className='innerTitle'>{this.state.route.name}</h2>\n                        <Row className='map-data'>\n                            <Col md={6}>\n                                <div className='detailMap'>\n                                    <MapComp defaultZoom={15} {...this.state.route} />\n                                </div>\n                                <div className='ownerTag'>\n                                    <small ><i>Owner of this Route: </i> <Link to={`/profile/${this.state.route.owner._id}`}><img className='userImg' src={this.state.route.owner.avatar}></img></Link></small>\n                                </div>\n\n                            </Col>\n                            <Col md={6}>\n                                <div className='container' style={{ height: '500px' }} >\n                                    {!this.state.isFinished ? <Spinner animation=\"grow\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner> : <PieChart countRocks={this.state.countRocks} />}\n                                </div>\n                            </Col>\n                        </Row>\n\n\n                        <h2 className='innerTitle'>Points of the route</h2>\n                        <Container>\n                            <Accordion>\n                                {this.state.points.map((point, idx) =>\n                                    <Card key={idx}>\n                                        <Accordion.Toggle as={Card.Header} eventKey={`${idx}`}>\n                                            <h4>Point: {point.name}</h4>\n                                            <small>Lat: {point.location.lat} | Lng: {point.location.lng}</small>\n                                        </Accordion.Toggle>\n\n                                        <Accordion.Collapse eventKey={`${idx}`}>\n                                            <Card.Body>\n                                                {point.rocks.map((rock, idx) =>\n                                                    <div key={idx}>\n                                                        <h3>Rocks in this point:</h3>\n                                                        <hr />\n                                                        <p><b>Name: </b>{rock.name}</p>\n                                                        <p><b>Description: </b>{rock.description}</p>\n                                                        <p><b>Directions: </b>{rock.directions.dataType}({rock.directions.data})</p>\n                                                        <p><b>Photos:</b></p>\n                                                        {rock.photos.map((photo, idx) => <img key={idx} className='rockImg' src={photo} alt='RockImg' />)}\n                                                    </div>\n                                                )}\n                                            </Card.Body>\n                                        </Accordion.Collapse>\n                                    </Card>\n                                )}\n                            </Accordion>\n                        </Container>\n\n                        <div className='editRoute'>\n                            {this.state.userId === this.state.route.owner._id ? \n                            <>\n                                <Link className='editBtn' to={`/routeEdit/${this.state.routeId}`}>Edit this route!</Link>\n                                <Link className='editBtn' to={`/routeCreation/${this.state.routeId}`}>Add more points!</Link>\n                            </> \n                            : null}\n                        </div>\n                    </>\n                }\n            </Container>\n        )\n    }\n}\n\nexport default RouteDetails","import React, { Component } from 'react'\nimport RouteForm from '../../forms/routeForm'\nimport RouterService from '../../../service/RoutesService'\n\nclass EditRouteInfo extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: props._id,\n            name: props.name,\n            description: props.description\n        }\n        this.routeService = new RouterService()\n    }\n\n    handleInputChange = e => {\n        const { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    handleFormSubmit = e => {\n        e.preventDefault()\n        this.routeService\n            .editRoute(this.state)\n            .catch((err) => console.log(err.response.data.message))\n    }\n\n    render() {\n        return (\n            <>\n                <RouteForm {...this.state} onSubmit={this.handleFormSubmit} inputChange={this.handleInputChange} />\n            </>\n        )\n    }\n}\n\nexport default EditRouteInfo","import React, { Component } from 'react'\nimport PointForm from '../../forms/pointForm'\nimport Spinner from 'react-bootstrap/Spinner'\nimport RouterService from '../../../service/RoutesService'\n\nclass EditPoint extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            pointId: props.point._id,\n            name: props.point.name,\n            lat: props.point.location.lat,\n            lng: props.point.location.lng\n        }\n        this.routeService = new RouterService()\n    }\n\n    handleInputChange = e => {\n        const { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    handleFormSubmit = e => {\n        e.preventDefault()\n        this.routeService\n            .editPoint(this.state)\n            .then(() => this.props.handleFormSubmit())\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <>\n                {!this.state.name ? <Spinner animation=\"grow\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner> :\n                    <PointForm {...this.state} inputChange={this.handleInputChange} onSubmit={this.handleFormSubmit} />}\n            </>\n        )\n    }\n}\n\nexport default EditPoint","import React, { Component } from 'react'\nimport RouterService from '../../../service/RoutesService'\nimport FilesService from '../../../service/FilesService'\nimport RockForm from '../../forms/rockForm'\n\nclass EditRock extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            rockId: props.rock._id,\n            name: props.rock.name,\n            rockType: props.rock.rockType,\n            description: props.rock.description,\n            samplesId: props.rock.samplesId,\n            photos: props.rock.photos,\n            dataType: props.rock.directions.dataType,\n            data: props.rock.directions.data\n        }\n        this.routeService = new RouterService()\n        this.filesService = new FilesService()\n    }\n\n    handleInputChange = e => {\n        const { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    handleFileUpload = e => {\n        const uploadData = new FormData()\n        uploadData.append('photo', e.target.files[0])\n\n        this.filesService.handleUpload(uploadData)\n            .then(response => {\n                console.log('Subida de archivo finalizada! La URL de Cloudinary es: ', response.data.secure_url)\n                this.setState({ photos: this.state.photos.concat(response.data.secure_url) })\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleFormSubmit = e => {\n        e.preventDefault()\n        this.routeService\n            .editRock(this.state)\n            .then(() => this.props.handleFormSubmit())\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <>\n                <RockForm {...this.state} onSubmit={this.handleFormSubmit} fileUpload={this.handleFileUpload} inputChange={this.handleInputChange} />\n            </>\n        )\n    }\n}\n\nexport default EditRock","import React, { Component } from 'react'\nimport RouterService from '../../../service/RoutesService'\nimport EditRouteInfo from './editRouteInfo'\nimport EditPoint from './editPoint'\nimport EditRock from './editRock'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\n\nclass Edit extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            routeId: props.match.params.id,\n            userId: props.loggedInUser._id,\n            ownerId: undefined,\n            route: undefined,\n            points: []\n        }\n        this.routeService = new RouterService()\n    }\n\n    componentDidMount = () => {\n        this.getRouteInfo()\n    }\n\n    getRouteInfo = () => {\n        this.setState({ points: [] })\n        this.routeService.getOneRoute(this.state.routeId)\n            .then(response => {\n                this.setState({ route: response.data, ownerId: response.data.owner })\n                response.data.points.map(point => {\n                    this.routeService.getOnePoint(point._id)\n                        .then(response => this.setState({ points: this.state.points.concat(response.data).sort((a, b) => (a._id > b._id) ? 1 : -1) }))\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleFormSubmit = () => {\n        this.getRouteInfo()\n    }\n\n    deleteRoute = () => {\n        const pointsId = [], rocksId = []\n\n        this.state.points.map(point => {\n            pointsId.push(point._id)\n            point.rocks.map(rock => rocksId.push(rock._id))\n        })\n\n        const toDelete = {\n            route: this.state.routeId,\n            points: pointsId,\n            rocks: rocksId\n        }\n\n        this.routeService.deleteRoute(toDelete)\n            .then(response => this.props.history.push('/myRoutes'))\n            .catch(err => console.log(err))\n    }\n\n    deletePoint = point => {\n        const rocksId = []\n\n        point.rocks.map(rock => rocksId.push(rock._id))\n\n        const toDelete = {\n            route: this.state.routeId,\n            point: point._id,\n            rocks: rocksId\n        }\n\n        this.routeService.deletePoint(toDelete)\n            .then(response => this.getRouteInfo())\n            .catch(err => console.log(err))\n    }\n\n    deleteRock = (rock, point) => {\n        const toDelete = {\n            point: point,\n            rock: rock\n        }\n\n        this.routeService.deleteRock(toDelete)\n            .then(response => this.getRouteInfo())\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <Container>\n                <h2 className='innerTitle'>Edit this Route</h2>\n                {!this.state.route ?\n                    <Spinner animation=\"grow\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner> :\n                    <>\n                        <EditRouteInfo {...this.state.route} />\n                        <Button className='deleteBtn' onClick={() => this.deleteRoute()}>Delete this route</Button>\n\n                        <Accordion>\n                            {!this.state.points ? <Spinner animation=\"grow\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner> :\n                                <>\n                                    {this.state.points.map((point, idx) =>\n                                        <Card key={point._id}>\n                                            <Accordion.Toggle as={Card.Header} eventKey={`${idx}`}>\n                                                <h4>Point: {point.name}</h4>\n                                            </Accordion.Toggle>\n\n                                            <Accordion.Collapse eventKey={`${idx}`}>\n                                                <Row className='justify-content-md-center'>\n                                                    <Col md={10}>\n                                                        <p className='innerTitle'>Edit Point:</p>\n\n                                                        <EditPoint point={point} handleFormSubmit={this.handleFormSubmit} />\n\n                                                        <Button className='deleteBtn' onClick={() => this.deletePoint(point)}>Delete this point</Button>\n\n                                                        <hr />\n\n                                                        <p className='innerTitle'>Rocks in this point:</p>\n                                                        {point.rocks.map(rock =>\n                                                            <div key={rock._id}>\n                                                                <EditRock rock={rock} handleFormSubmit={this.handleFormSubmit} />\n                                                                <Button className='deleteBtn' onClick={() => this.deleteRock(rock._id, point._id)}>Delete this rock</Button>\n                                                                <hr />\n                                                            </div>\n                                                        )}\n                                                    </Col>\n                                                </Row>\n                                            </Accordion.Collapse>\n                                        </Card>\n                                    )}\n                                </>\n                            }\n                        </Accordion>\n                    </>\n                }\n            </Container>\n        )\n    }\n}\n\nexport default Edit","import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.scss'\nimport AuthService from './../service/AuthService'\nimport { Switch, Route } from 'react-router-dom'\nimport Navigation from './ui/Navbar'\nimport SignupForm from './auth/Signup-form'\nimport LoginForm from './auth/Login-form'\nimport ProfilePage from './pages/profile'\nimport HomeLoggedIn from './pages/homeLoggedIn'\nimport HomeNotLoggedIn from './pages/homeNotLoggedIn'\nimport CreateRoute from './pages/createRoute'\nimport MyRoutes from './pages/myRoutes'\nimport RouteCreation from './pages/routeCreation'\nimport RouteDetails from './pages/routeDetails'\nimport Edit from './pages/editRoute'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      loggedInUser: null,\n    }\n    this.AuthService = new AuthService()\n  }\n\n  setTheUser = user => this.setState({ loggedInUser: user }, () => console.log(\"El estado de App ha cambiado:\", this.state))\n\n  fetchUser = () => {\n    this.AuthService\n      .isLoggedIn()\n      .then(response => this.state.loggedInUser === null && this.setState({ loggedInUser: response.data }))\n      .catch(err => console.log({ err }))\n  }\n\n  render() {\n\n    this.fetchUser()\n\n    return (\n      <div className='contain'>\n        <div className='content'>\n          <Navigation setTheUser={this.setTheUser} loggedInUser={this.state.loggedInUser} />\n\n          <Switch>\n            <Route exact path='/' render={() => this.state.loggedInUser ? <HomeLoggedIn /> : <HomeNotLoggedIn />} />\n            <Route path='/login' render={props => <LoginForm {...props} setTheUser={this.setTheUser} />} />\n            <Route path='/signup' render={props => <SignupForm {...props} setTheUser={this.setTheUser} />} />\n            <Route path='/profile/:id' render={props => this.state.loggedInUser ? <ProfilePage {...props} loggedInUser={this.state.loggedInUser} /> : <HomeNotLoggedIn />} />\n            <Route path='/createRoute' render={props => this.state.loggedInUser ? <CreateRoute {...props} loggedInUser={this.state.loggedInUser} /> : <HomeNotLoggedIn />} />\n            <Route path='/myRoutes' render={props => this.state.loggedInUser ? <MyRoutes {...props} loggedInUser={this.state.loggedInUser} /> : <HomeNotLoggedIn />} />\n            <Route path='/routeCreation/:id' render={props => this.state.loggedInUser ? <RouteCreation {...props} loggedInUser={this.state.loggedInUser} /> : <HomeNotLoggedIn />} />\n            <Route path='/routeDetails/:id' render={props => this.state.loggedInUser ? <RouteDetails {...props} loggedInUser={this.state.loggedInUser} /> : <HomeNotLoggedIn />} />\n            <Route path='/routeEdit/:id' render={props => this.state.loggedInUser ? <Edit {...props} loggedInUser={this.state.loggedInUser} /> : <HomeNotLoggedIn />} />\n          </Switch>\n        </div>\n        <footer className='footer'><small>Copyright ©2020 Ignacio Serrano & David Roel Gómez</small></footer>\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n)","module.exports = __webpack_public_path__ + \"static/media/logo.73963d7d.png\";"],"sourceRoot":""}