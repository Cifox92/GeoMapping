{"version":3,"sources":["service/AuthService.js","components/ui/Navbar/index.js","service/FilesService.js","components/auth/Signup-form/index.js","components/auth/Login-form/index.js","components/pages/profile/index.js","service/RoutesService.js","components/ui/routeMap/map.js","components/ui/routeMap/index.js","components/pages/homeLoggedIn/generalMap/map.js","components/pages/homeLoggedIn/generalMap/index.js","components/pages/homeLoggedIn/index.js","components/pages/homeNotLoggedIn/index.js","components/forms/routeForm.js","components/pages/createRoute/index.js","components/pages/myRoutes/index.js","components/forms/pointForm.js","components/pages/routeCreation/addPoint.js","components/forms/rockForm.js","components/pages/routeCreation/addRock.js","components/pages/routeCreation/index.js","components/pages/routeDetails/index.js","components/App.js","index.js"],"names":["AuthService","login","credentials","service","post","signup","logout","isLoggedIn","get","this","axios","create","baseURL","process","withCredentials","Navigation","props","then","setTheUser","handleToast","catch","err","console","log","Navbar","bg","variant","expand","sticky","Brand","to","Toggle","aria-controls","Collapse","id","Nav","className","loggedInUser","Link","as","activeStyle","color","onClick","username","Component","Services","handleUpload","theFile","SignupForm","handleFileUpload","e","uploadData","FormData","append","target","files","filesService","response","data","secure_url","setState","avatar","handleInputChange","name","value","handleFormSubmit","preventDefault","authService","state","history","push","message","password","aboutMe","FilesService","Container","Row","Col","md","offset","span","Form","onSubmit","Group","Label","Control","onChange","type","Text","description","Button","LoginForm","Profile","RouterService","getAllRoutes","getOneRoute","getMyRoutes","userId","createRoute","route","addPoint","point","addRock","rock","getOnePoint","pointId","Map","points","markers","defaultCenter","defaultZoom","path","geodesic","options","strokeColor","strokeOpacity","strokeWeight","map","position","lat","lng","React","withScriptjs","withGoogleMap","MapComp","waypoints","p","location","parseFloat","centerRoute","Math","ceil","length","loadingElement","containerElement","mapElement","googleMapURL","style","height","_id","GeneralMap","routes","centerLoc","AllRoutes","componentDidMount","updateRouteList","geolocation","routeService","undefined","RouteService","navigator","getCurrentPosition","coords","latitude","longitude","Spinner","animation","role","HomeNotLoggedIn","RouteForm","inputChange","CreateRoute","owner","MyRoutes","PointForm","AddPoint","updatePointList","routeId","match","params","rocks","RockForm","rockType","samplesId","fileUpload","photos","photo","src","dataType","AddRockForm","concat","handleRockSubmit","pointIdClicked","RouteCreation","handleModal","status","showModal","key","size","marginBottom","Modal","show","onHide","Body","RouteDetails","getRouteInfo","ownerId","reverse","App","user","fetchUser","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d68d006.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default class AuthService {\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}`,\n            withCredentials: true\n        })\n    }\n\n    login = credentials => this.service.post('/login', credentials)\n    signup = credentials => this.service.post('/signup', credentials)\n    logout = () => this.service.post('/logout')\n    isLoggedIn = () => this.service.get('/loggedin')\n}","import React, { Component } from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport AuthService from './../../../service/AuthService'\nimport { Link, NavLink } from 'react-router-dom'\n\nclass Navigation extends Component {\n\n    constructor(props) {\n        super(props)\n        this.AuthService = new AuthService()\n    }\n\n    logout = () => {\n        this.AuthService\n            .logout()\n            .then(() => {\n                this.props.setTheUser(false)\n                this.props.handleToast(true, 'Usuario desconectado')\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\" >\n                <Navbar.Brand>\n                    <Link to=\"/\">GeoMapping_</Link>\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"ml-auto\">\n                        {this.props.loggedInUser ?\n                            (\n                                <>\n                                    <Nav.Link as=\"span\">\n                                        <NavLink to=\"/myRoutes\" activeStyle={{ color: 'white' }}>Your Routes</NavLink>\n                                    </Nav.Link>\n                                    <Nav.Link as=\"span\">\n                                        <NavLink to=\"/createRoute\" activeStyle={{ color: 'white' }}>Create a new route</NavLink>\n                                    </Nav.Link>\n                                    <Nav.Link as=\"span\">\n                                        <span onClick={this.logout}>Log Out</span>\n                                    </Nav.Link>\n                                    <Nav.Link as=\"span\">\n                                        <NavLink to=\"/profile\" activeStyle={{ color: 'white' }}>Hello, {this.props.loggedInUser.username}</NavLink>\n                                    </Nav.Link>\n                                </>\n                            ) : (\n                                <>\n                                    <Nav.Link as=\"span\">\n                                        <NavLink to=\"/signup\" activeStyle={{ color: 'white' }}>Sign Up</NavLink>\n                                    </Nav.Link>\n                                    <Nav.Link as=\"span\">\n                                        <NavLink to=\"/login\" activeStyle={{ color: 'white' }}>Log In</NavLink>\n                                    </Nav.Link>\n                                </>\n                            )\n                        }\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\nexport default Navigation","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/files`,\n            withCredentials: true\n        })\n    }\n\n    handleUpload = theFile => this.service.post('/upload', theFile)\n}","import React, { Component } from \"react\"\nimport AuthService from \"../../../service/AuthService\"\nimport FilesService from '../../../service/FilesService'\nimport Button from \"react-bootstrap/Button\"\nimport Form from \"react-bootstrap/Form\"\nimport Container from \"react-bootstrap/Container\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\n\nclass SignupForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: \"\",\n      password: \"\",\n      avatar: \"\",\n      aboutMe: \"\"\n    }\n    this.authService = new AuthService()\n    this.filesService = new FilesService()\n  }\n\n  handleFileUpload = e => {\n    const uploadData = new FormData()\n    uploadData.append('photo', e.target.files[0])\n\n    this.filesService.handleUpload(uploadData)\n      .then(response => {\n        console.log('Subida de archivo finalizada! La URL de Cloudinary es: ', response.data.secure_url)\n        this.setState({ avatar: response.data.secure_url })\n      })\n      .catch(err => console.log(err))\n  }\n  \n  handleInputChange = (e) => {\n    const { name, value } = e.target\n    this.setState({ [name]: value })\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault()\n    this.authService.signup(this.state)\n      .then((response) => {\n        this.props.setTheUser(response.data);\n        this.props.history.push(\"/\")\n      })\n      .catch((err) => console.log(err.response.data.message));\n  }\n\n  render() {\n    return (\n      <Container as=\"main\">\n        <Row>\n          <Col md={{ offset: 3, span: 6 }}>\n            <h3>New User</h3>\n\n            <hr></hr>\n\n            <Form onSubmit={this.handleFormSubmit}>\n              <Form.Group>\n                <Form.Label>User Name</Form.Label>\n                <Form.Control onChange={this.handleInputChange} value={this.state.username} name=\"username\" type=\"text\" />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Password</Form.Label>\n                <Form.Control onChange={this.handleInputChange} value={this.state.password} name=\"password\" type=\"password\" />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Description</Form.Label>\n                <Form.Text className=\"text-muted\">Tell us a bit about yourself.</Form.Text>\n                <Form.Control as=\"textarea\" onChange={this.handleInputChange} value={this.state.description} name=\"aboutMe\" type=\"text\" />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Avatar (file)</Form.Label>\n                <Form.Control name=\"avatar\" type=\"file\" onChange={this.handleFileUpload} />\n              </Form.Group>\n\n              <Button variant=\"dark\" type=\"submit\">Sign Up!</Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default SignupForm\n","import React, { Component } from 'react'\nimport AuthService from '../../../service/AuthService'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: ''\n        }\n        this.authService = new AuthService()\n    }\n\n    handleInputChange = e => {\n        const { name, value } = e.target \n        this.setState({ [name]: value })\n    }\n\n    handleFormSubmit = e => {\n        e.preventDefault()\n        this.authService\n            .login(this.state)\n            .then(response => {\n                this.props.setTheUser(response.data)\n                this.props.history.push('/')\n            })\n            .catch(err => console.log(err.response.data.message))\n    }\n\n    render() {\n        return (\n            <Container as=\"main\">\n                <Row>\n                    <Col md={{ offset: 3, span: 6 }}>\n                        <h3>Log In</h3>\n\n                        <hr></hr>\n\n                        <Form onSubmit={this.handleFormSubmit}>\n                            <Form.Group>\n                                <Form.Label>User Name</Form.Label>\n                                <Form.Control onChange={this.handleInputChange} value={this.state.username} name=\"username\" type=\"text\" />\n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control onChange={this.handleInputChange} value={this.state.password} name=\"password\" type=\"password\" />\n                            </Form.Group>\n\n                            <Button variant=\"dark\" type=\"submit\">Log In</Button>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default LoginForm","import React from 'react'\n\nconst Profile = props => {\n\n    return props.loggedInUser && <h1>¡Hola, {props.loggedInUser.username}!</h1>\n}\n\nexport default Profile","import axios from 'axios'\n\nexport default class RouterService {\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/routes`,\n            withCredentials: true\n        })\n    }\n\n    getAllRoutes = () => this.service.get('/getAllRoutes')\n    getOneRoute = id => this.service.get(`/getOneRoute/${id}`)\n    getMyRoutes = userId => this.service.get(`/getMyRoutes/${userId}`)\n    createRoute = route => this.service.post(`/createNewRoute`, route)\n    addPoint = point => this.service.post('/addPoint', point)\n    addRock = rock => this.service.post('/addRock', rock)\n    getOnePoint = pointId => this.service.get(`/getOnePoint/${pointId}`)\n}","/* global google*/\nimport React from \"react\";\n\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  Marker,\n  Polyline\n} from \"react-google-maps\";\n\nclass Map extends React.Component {\n  state = {\n    points: this.props.markers\n  }\n\n  render() {\n    return (\n      <GoogleMap defaultCenter={this.props.defaultCenter} defaultZoom={this.props.defaultZoom}>\n        <Polyline\n          path={this.state.points}\n          geodesic={true}\n              options={{\n                strokeColor: \"#ff2527\",\n                strokeOpacity: 0.75,\n                strokeWeight: 2\n              }}\n          />\n          {this.state.points.map(point => <Marker position={{lat: point.lat, lng: point.lng}}/>)}\n      </GoogleMap>\n    )\n  }\n}\n\nexport default withScriptjs(withGoogleMap(Map))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// /* global google*/\n// import React from \"react\";\n// import {\n//   withGoogleMap,\n//   GoogleMap,\n//   withScriptjs,\n//   Marker,\n//   DirectionsRenderer\n// } from \"react-google-maps\";\n\n// class MapDirectionsRenderer extends React.Component {\n//   state = {\n//     directions: null,\n//     error: null\n//   };\n\n//   componentDidMount() {\n//     const { places, travelMode } = this.props\n    \n//     const waypoints = places.map(p => ({\n//         location: {lat: parseFloat(p.lat), lng: parseFloat(p.lng)},\n//         stopover: true\n//     }))\n\n//     console.log(waypoints)\n//     const origin = waypoints.shift().location\n//     const destination = waypoints.pop().location\n    \n//     const directionsService = new google.maps.DirectionsService();\n//     directionsService.route(\n//       {\n//         origin: origin,\n//         destination: destination,\n//         travelMode: travelMode,\n//         waypoints: waypoints\n//       },\n//       (result, status) => {\n//         if (status === google.maps.DirectionsStatus.OK) {\n//           this.setState({\n//             directions: result\n//           })\n//         } else {\n//           this.setState({ error: result })\n//         }\n//       }\n//     )\n//   }\n\n//   render() {\n//     if (this.state.error) {\n//       return <h1>{this.state.error}</h1>;\n//     }\n//     return (this.state.directions && <DirectionsRenderer directions={this.state.directions} />)\n//   }\n// }\n\n// const Map = withScriptjs(\n//   withGoogleMap(props => (\n//     <GoogleMap\n//       defaultCenter={props.defaultCenter}\n//       defaultZoom={props.defaultZoom}\n//     >\n//       {props.markers.map((marker, index) => {\n//         const position = { lat: marker.latitude, lng: marker.longitude }\n//         return <Marker key={index} position={position} />\n//       })}\n//       <MapDirectionsRenderer\n//         places={props.markers}\n//         travelMode={google.maps.TravelMode.WALKING}\n//       />\n//     </GoogleMap>\n//   ))\n// )\n\n// export default Map","import React from 'react'\nimport Map from './map'\nimport { Link } from 'react-router-dom';\n\nconst googleMapsApiKey = \"AIzaSyDq34sAhjDIRsBySpw92CgvTmo8mW8Mwt8\";\n\nconst MapComp = props => {\n  const places = props.points.map(p => p.location)\n  let waypoints = places.map(p => ({lat: parseFloat(p.lat), lng: parseFloat(p.lng)}))\n  let centerRoute = Math.ceil(waypoints.length / 2) - 1\n  let lat = waypoints[centerRoute].lat, lng = waypoints[centerRoute].lng\n\n  const {\n    loadingElement,\n    containerElement,\n    mapElement,\n    defaultCenter,\n    defaultZoom\n  } = props\n\n  return (\n    <>\n      <Map\n        googleMapURL={\n          'https://maps.googleapis.com/maps/api/js?key=' +\n          googleMapsApiKey +\n          '&libraries=geometry,drawing,places'\n        }\n        markers={waypoints}\n        loadingElement={loadingElement || <div style={{height: `100%`}}/>}\n        containerElement={containerElement || <div style={{height: \"80vh\"}}/>}\n        mapElement={mapElement || <div style={{height: `100%`}}/>}\n        defaultCenter={defaultCenter || {lat: lat, lng: lng}}\n        defaultZoom={defaultZoom || 11}\n      />\n      <Link to={`/routeDetails/${props._id}`}>\n        {props.name} <br/>\n        {props.description}\n      </Link>\n    </>\n  )\n}\n\nexport default MapComp","/* global google*/\nimport React from \"react\";\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  Marker,\n} from \"react-google-maps\";\n\nclass Map extends React.Component {\n  state = {\n    points: this.props.markers\n  }\n  render() {\n    return (\n      <GoogleMap defaultCenter={this.props.defaultCenter} defaultZoom={this.props.defaultZoom}>\n        {this.state.points.map(point => <Marker position={{lat: point.lat, lng: point.lng}}/>)}\n      </GoogleMap>\n    )  \n  }\n}\n\nexport default withScriptjs(withGoogleMap(Map))","import React from 'react'\nimport Map from './map'\n\nconst googleMapsApiKey = \"AIzaSyDq34sAhjDIRsBySpw92CgvTmo8mW8Mwt8\";\n\nconst GeneralMap = props => {\n    \n  const initialPoints = props.routes.map(route => route.points[0].location)\n  const waypoints = initialPoints.map(p => ({lat: parseFloat(p.lat), lng: parseFloat(p.lng)}))\n  let lat = props.centerLoc.lat, lng = props.centerLoc.lng\n \n  const {\n    loadingElement,\n    containerElement,\n    mapElement,\n    defaultCenter,\n    defaultZoom\n  } = props\n\n  return (\n    <Map\n      googleMapURL={\n        'https://maps.googleapis.com/maps/api/js?key=' +\n        googleMapsApiKey +\n        '&libraries=geometry,drawing,places'\n      }\n      markers={waypoints}\n      loadingElement={loadingElement || <div style={{height: `100%`}}/>}\n      containerElement={containerElement || <div style={{height: \"80vh\"}}/>}\n      mapElement={mapElement || <div style={{height: `100%`}}/>}\n      defaultCenter={defaultCenter || {lat: lat, lng: lng}}\n      defaultZoom={defaultZoom || 20}\n    />\n  )\n}\n\nexport default GeneralMap","import React, {Component} from 'react'\nimport RouteService from './../../../service/RoutesService'\nimport Spinner from 'react-bootstrap/Spinner'\nimport MapComp from './../../ui/routeMap'\nimport GeneralMap from './generalMap'\n\nclass AllRoutes extends Component {\n    constructor (props) {\n        super (props)\n        this.state = {\n            routes: undefined,\n            location: undefined\n        }\n        this.routeService = new RouteService()\n    }\n\n    componentDidMount = () => {\n    this.updateRouteList()\n     this.geolocation()\n    }\n\n    geolocation() {\n        navigator.geolocation.getCurrentPosition(position => {\n          this.setState({\n            location: {\n                lat: position.coords.latitude,\n                lng: position.coords.longitude\n            }\n          })\n        })\n      }\n\n    updateRouteList = () => {\n        this.routeService\n            .getAllRoutes()\n            .then(response => this.setState({routes :response.data}))\n            .catch(err => console.log(err))\n    }\n    \n    render () {\n        return (\n            <>\n                <h2>HOLA!</h2>\n                {!this.state.routes ? <Spinner animation=\"grow\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner> : <GeneralMap defaultZoom={10} routes = {this.state.routes} centerLoc={this.state.location}/>}\n                <p>Rutas de todos los usuarios...</p>\n                {!this.state.routes ? <Spinner animation=\"grow\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner> : this.state.routes.map(route => <MapComp defaultZoom={15} {...route} /> )}\n            </>\n        )\n    }\n}\n\nexport default AllRoutes","import React from 'react'\n\nconst HomeNotLoggedIn = () => {\n\n    return (\n        <>\n            <h1>GeoMapping_</h1>\n            <p>NO LOGEADO! Mostrar aquí una presentación para nuevos usuarios.</p>\n        </>\n    )\n}\n\nexport default HomeNotLoggedIn","import React from 'react'\n\nimport Button from \"react-bootstrap/Button\"\nimport Form from \"react-bootstrap/Form\"\n\nconst RouteForm = props => {\n    return (\n        <Form onSubmit={props.onSubmit}>\n            <Form.Group>\n                <Form.Label>Route Name</Form.Label>\n                <Form.Control onChange={props.inputChange} value={props.name} name=\"name\" type=\"text\" />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>Description of the Route</Form.Label>\n                <Form.Control as=\"textarea\" onChange={props.inputChange} value={props.description} name=\"description\" type=\"text\" />\n            </Form.Group>\n\n            <Button variant=\"dark\" type=\"submit\">Add a new Route</Button>\n        </Form>\n    )  \n}\n\nexport default RouteForm","import React, {Component} from 'react'\nimport RouteService from './../../../service/RoutesService'\nimport Container from \"react-bootstrap/Container\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\n\nimport RouteForm from './../../forms/routeForm'\n\nclass CreateRoute extends Component {\n    constructor (props) {\n        super (props)\n        this.state = {\n            name: '',\n            description: '',\n            owner: props.loggedInUser._id,\n            points: []\n        }\n        this.routeService = new RouteService()\n    }\n\n    handleInputChange = e => {\n        const { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    handleFormSubmit = e => {\n        e.preventDefault()\n        this.routeService\n            .createRoute(this.state)\n            .then(response => {\n                this.props.history.push(`/routeCreation/${response.data._id}`)\n            })\n            .catch((err) => console.log(err.response.data.message))\n    }\n\n    render () {\n        return (\n            <Container as=\"main\">\n                <Row>\n                    <Col md={{ offset: 3, span: 6 }}>\n                    <h3>New Route</h3>\n\n                    <hr></hr>\n\n                        <RouteForm {...this.state} onSubmit={this.handleFormSubmit} inputChange={this.handleInputChange} />\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default CreateRoute","import React, {Component} from 'react'\nimport RouteService from './../../../service/RoutesService'\nimport Spinner from 'react-bootstrap/Spinner'\n\nimport MapComp from './../../ui/routeMap'\n\nclass MyRoutes extends Component {\n    constructor (props) {\n        super (props)\n        this.state = {\n            userId: props.loggedInUser._id,\n            routes: undefined\n        }\n        this.routeService = new RouteService()\n    }\n\n    componentDidMount = () => this.updateRouteList()\n\n    updateRouteList = () => {\n        this.routeService\n            .getMyRoutes(this.state.userId)\n            .then(response => this.setState({routes: response.data}))\n            .catch(err => console.log(err))\n    }\n    \n    render () {\n        return (\n            <>\n            <h2>HOLA!</h2>\n            {!this.state.routes ? <Spinner animation=\"grow\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner> : this.state.routes.map(route => <MapComp defaultZoom={15} {...route} /> )}\n            </>\n        )\n    }\n}\n//CREAR TARJETAS PARA CADA RUTA\n\nexport default MyRoutes","import React from 'react'\n\nimport Button from \"react-bootstrap/Button\"\nimport Form from \"react-bootstrap/Form\"\n\nconst PointForm = props => {\n    return (\n        <Form onSubmit={props.onSubmit}>\n            <Form.Group>\n                <Form.Label>Lat</Form.Label>\n                <Form.Control onChange={props.inputChange} value={props.location.lat} name=\"lat\" type=\"text\" />\n                <Form.Label>Lon</Form.Label>\n                <Form.Control onChange={props.inputChange} value={props.location.lng} name=\"lng\" type=\"text\" />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>Name of the point</Form.Label>\n                <Form.Control onChange={props.inputChange} value={props.name} name=\"name\" type=\"text\" />\n            </Form.Group>\n\n            <Button variant=\"dark\" type=\"submit\">Add a new Point</Button>\n        </Form>\n    )  \n}\n\nexport default PointForm","import React, {Component} from 'react'\nimport RouteService from '../../../service/RoutesService'\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport PointForm from '../../forms/pointForm'\n\nclass AddPoint extends Component  {\n    constructor (props) {\n        super (props)\n        this.state = {\n            routeId: props.match.params.id,\n            name: undefined,\n            location: {\n                lat: undefined,\n                lng: undefined\n            },\n            rocks:[]\n        }\n        this.routeService = new RouteService()\n    }\n    componentDidMount = () => this.geolocation()\n    \n    geolocation() {\n        navigator.geolocation.getCurrentPosition(position => {\n          this.setState({\n            location: {\n                lat: position.coords.latitude,\n                lng: position.coords.longitude\n            }\n          })\n        })\n      }\n\n    handleInputChange = e => {\n        const { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    handleFormSubmit = e => {\n        this.geolocation()\n        e.preventDefault()\n        this.routeService\n            .addPoint(this.state)\n            .then(() => this.props.updatePointList())\n            .catch((err) => console.log(err.response.data.message))\n        }\n\n    render () {\n        return (\n            <>\n                <Row>\n                    <Col md={{ offset: 3, span: 6 }}>\n                    <h3>New Point</h3>\n\n                    <hr></hr>\n                    <PointForm {...this.state} onSubmit={this.handleFormSubmit} inputChange={this.handleInputChange} />\n                    </Col>\n                </Row>\n            </>\n        )\n    }\n}\n\nexport default AddPoint","import React from 'react'\n\nimport Button from \"react-bootstrap/Button\"\nimport Form from \"react-bootstrap/Form\"\n\nconst RockForm = props => {\n    return (\n        <Form onSubmit={props.onSubmit}>\n            <Form.Group>\n                <Form.Label>Name</Form.Label>\n                <Form.Control onChange={props.inputChange} value={props.name} name=\"name\" type=\"text\" />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>Type of Rock</Form.Label>\n                <Form.Control onChange={props.inputChange} value={props.rockType} name=\"rockType\" type=\"text\" />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>Description</Form.Label>\n                <Form.Control onChange={props.inputChange} value={props.description} name=\"description\" type=\"text\" />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>Samples</Form.Label>\n                <Form.Control onChange={props.inputChange} value={props.samplesId} name=\"samplesId\" type=\"text\" />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>Photos</Form.Label>\n                <Form.Control onChange={props.fileUpload} name=\"photos\" type=\"file\" />\n                <p>Added photos: </p>\n                {props.photos.map(photo => <img src={photo} />)}\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>Directions</Form.Label>\n\n                <Form.Text className=\"text-muted\">Type of data</Form.Text>\n                <Form.Control onChange={props.inputChange} value={props.dataType} name=\"dataType\" type=\"text\" />\n\n                <Form.Text className=\"text-muted\">Data</Form.Text>\n                <Form.Control onChange={props.inputChange} value={props.data} name=\"data\" type=\"text\" />\n            </Form.Group>\n\n            <Button variant=\"dark\" type=\"submit\">Add rock!</Button>\n        </Form>\n    )  \n}\n\nexport default RockForm","import React, { Component } from 'react'\nimport RouteService from '../../../service/RoutesService'\nimport FilesService from '../../../service/FilesService'\n\nimport RockForm from '../../forms/rockForm'\n\nclass AddRockForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            pointId: props.pointIdClicked,\n            name: '',\n            rockType: '',\n            description: '',\n            samplesId: '',\n            photos: [],\n            dataType: '',\n            data: ''\n        }\n        this.routeService = new RouteService()\n        this.filesService = new FilesService()\n    }\n\n    handleInputChange = e => {\n        const { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    handleFileUpload = e => {\n        const uploadData = new FormData()\n        uploadData.append('photo', e.target.files[0])\n    \n        this.filesService.handleUpload(uploadData)\n          .then(response => {\n            console.log('Subida de archivo finalizada! La URL de Cloudinary es: ', response.data.secure_url)\n            this.setState({photos: this.state.photos.concat(response.data.secure_url)})\n          })\n          .catch(err => console.log(err))\n      }\n\n    handleFormSubmit = e => {\n        e.preventDefault()\n        this.routeService\n            .addRock(this.state)\n            .then(() => this.props.handleRockSubmit())\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <>\n                <h3>Add a new rock to this point</h3>\n                <hr></hr>\n\n                <RockForm {...this.state} onSubmit={this.handleFormSubmit} fileUpload={this.handleFileUpload} inputChange={this.handleInputChange} />\n\n            </>\n        )\n    }\n}\nexport default AddRockForm","import React, {Component} from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport RouteService from '../../../service/RoutesService'\nimport AddPoint from './addPoint'\nimport AddRock from './addRock'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\n\nclass RouteCreation extends Component {\n    constructor (props) {\n        super (props)\n        this.state = {\n            routeId: props.match.params.id,\n            points: undefined,\n            pointIdClicked: undefined,\n            showModal: false\n        }\n        this.routeService = new RouteService()\n    }\n\n    componentDidMount= () => this.updatePointList()\n\n    updatePointList = () => {\n        this.routeService\n            .getOneRoute(this.state.routeId)\n            .then(response => this.setState({ points: response.data.points }))\n            .catch(err => console.log(err))\n    }\n\n    handleModal = status => this.setState({ showModal: status })\n    pointIdClicked = pointId => this.setState({ pointIdClicked: pointId })\n\n    handleRockSubmit = () => {\n        this.handleModal(false)\n        this.updatePointList()\n    }\n\n    render () {\n        return (\n            <>\n                <h1>Add points to the route while you are working!</h1>\n                <p>Mapa aqui con los puntos</p>\n                <AddPoint {...this.props} updatePointList={this.updatePointList} routeId={this.state.routeId}/>\n\n                {!this.state.points ? <Spinner animation=\"grow\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner> : <ul>{this.state.points.map(point => \n                    <li key={point._id}>\n                        <Button onClick={() => {this.handleModal(true); this.pointIdClicked(point._id)}} variant=\"dark\" size=\"sm\" style={{ marginBottom: '20px' }}>{point.name}</Button>\n                    </li>\n                    )}\n                </ul>}\n\n                <Modal size=\"lg\" show={this.state.showModal} onHide={() => this.handleModal(false)}>\n                    <Modal.Body>\n                        <AddRock pointIdClicked={this.state.pointIdClicked} handleRockSubmit={this.handleRockSubmit} />\n                    </Modal.Body>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default RouteCreation","import React, {Component} from 'react'\nimport RouterService from '../../../service/RoutesService'\nimport Spinner from 'react-bootstrap/Spinner'\n\nimport MapComp from './../../ui/routeMap'\n\nclass RouteDetails extends Component {\n    constructor (props) {\n        super (props)\n        this.state = {\n            userId: props.loggedInUser._id,\n            ownerId: undefined, \n            routeId: props.match.params.id,\n            route: undefined,\n            points: []\n        }\n        this.routeService = new RouterService()\n    }\n\n    componentDidMount = () => {\n        this.getRouteInfo()\n    }\n\n    getRouteInfo = () => {\n        this.routeService.getOneRoute(this.state.routeId)\n            .then(response => {\n                this.setState({route: response.data, ownerId: response.data.owner})\n                response.data.points.map(point => {\n                    this.routeService.getOnePoint(point._id)\n                        .then(response => this.setState({points: this.state.points.concat(response.data).reverse()}))\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    render () {\n        return (\n            <>\n                {!this.state.route ? <Spinner animation=\"grow\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner> :\n                <>\n                    <MapComp defaultZoom={15} {...this.state.route} />\n                    <h2>Points of the route</h2>\n                    {this.state.points.map(point => \n                        <>\n                            <h3>{point.name}</h3>\n                            <p>Lat: {point.location.lat}</p>\n                            <p>Lng: {point.location.lng}</p>\n                            {point.rocks.map(rock =>\n                                <>\n                                    <p>Rocks in this point:</p>\n                                    <p>Name: {rock.name}</p>\n                                    <p>Description: {rock.description}</p>\n                                </>\n                            )}\n                        </>\n                    )}\n                    {this.state.userId === this.state.ownerId ? <p>ES TU RUTA!</p> : null}\n                </>\n                }\n            </>\n        )\n    }\n}\n\nexport default RouteDetails","import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\nimport AuthService from './../service/AuthService'\nimport { Switch, Route } from 'react-router-dom'\nimport Navigation from './ui/Navbar'\nimport SignupForm from './auth/Signup-form'\nimport LoginForm from './auth/Login-form'\nimport ProfilePage from './pages/profile'\nimport HomeLoggedIn from './pages/homeLoggedIn'\nimport HomeNotLoggedIn from './pages/homeNotLoggedIn'\nimport CreateRoute from './pages/createRoute'\nimport MyRoutes from './pages/myRoutes'\nimport RouteCreation from './pages/routeCreation'\nimport RouteDetails from './pages/routeDetails'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      loggedInUser: null,\n    }\n    this.AuthService = new AuthService()\n  }\n\n  setTheUser = user => this.setState({ loggedInUser: user }, () => console.log(\"El estado de App ha cambiado:\", this.state))\n\n  fetchUser = () => {\n    this.AuthService\n      .isLoggedIn()\n      .then(response => this.state.loggedInUser === null && this.setState({ loggedInUser: response.data }))\n      .catch(err => console.log({ err }))\n  }\n\n  render() {\n\n    this.fetchUser()\n\n    return (\n      <>\n        <Navigation setTheUser={this.setTheUser} loggedInUser={this.state.loggedInUser} />\n\n        <Switch>\n          <Route exact path='/' render={() => this.state.loggedInUser ? <HomeLoggedIn /> : <HomeNotLoggedIn />} />\n          <Route path='/login' render={props => <LoginForm {...props} setTheUser={this.setTheUser} />} />\n          <Route path='/signup' render={props => <SignupForm {...props} setTheUser={this.setTheUser} />} />\n          <Route path='/profile' render={() => <ProfilePage loggedInUser={this.state.loggedInUser} />} />\n          <Route path='/createRoute' render={props => <CreateRoute {...props} loggedInUser={this.state.loggedInUser} />} />\n          <Route path='/myRoutes' render={props => <MyRoutes {...props} loggedInUser={this.state.loggedInUser} />} />\n          <Route path='/routeCreation/:id' render={props => <RouteCreation {...props} loggedInUser={this.state.loggedInUser} />} />\n          <Route path='/routeDetails/:id' render={props => <RouteDetails {...props} loggedInUser={this.state.loggedInUser} />} />\n        </Switch>\n      </>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n)"],"sourceRoot":""}